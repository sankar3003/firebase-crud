{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/customer/customer.component.ts","webpack:///src/app/customer/customer.component.html","webpack:///src/app/employees/employee-list/employee-list.component.ts","webpack:///src/app/employees/employee-list/employee-list.component.html","webpack:///src/app/employees/employee/employee.component.ts","webpack:///src/app/employees/employee/employee.component.html","webpack:///src/app/employees/employees.component.ts","webpack:///src/app/employees/employees.component.html","webpack:///src/app/employees/shared/employee.model.ts","webpack:///src/app/employees/shared/employee.service.ts","webpack:///src/app/product-form/product-form.component.ts","webpack:///src/app/product-form/product-form.component.html","webpack:///src/app/user/user.component.ts","webpack:///src/app/user/user.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","initializeApp","firebaseConfig","declarations","providers","bootstrap","CustomerComponent","fb","createForm","addUser","group","name","uaddress","array","address","city","pincode","state","country","userAddress","push","index","removeAt","console","log","value","get","addAddress","submit","EmployeeListComponent","employeeService","toastr","x","getData","snapshotChanges","subscribe","item","employeeList","forEach","element","y","payload","toJSON","key","emp","selectedEmployee","Object","assign","confirm","deleteEmployee","success","EmployeeComponent","resetForm","employeeForm","valid","info","$key","insertEmployee","updateEmployee","reset","phone","email","location","onSubmit","EmployeesComponent","Employee","EmployeeService","firebase","list","employee","update","remove","providedIn","ProductFormComponent","http","_url","data","i","productForm","required","selling_points","point","sellingPoints","controls","invalid","res","r","addSellingPoint","UserComponent","form","persons","person","add","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'customer-firebase-app';\n}\n","<div class=\"container pt-4\">\n  <app-employees></app-employees>\n  <!-- <app-customer></app-customer> -->\n  <!-- <app-product-form></app-product-form> -->\n  <!-- <app-user></app-user> -->\n</div>\n","import { UserComponent } from './user/user.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { EmployeeListComponent } from './employees/employee-list/employee-list.component';\r\nimport { environment } from './../environments/environment';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { CustomerComponent } from './customer/customer.component';\r\nimport { AngularFireModule } from 'angularfire2';\r\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\r\nimport { EmployeesComponent } from './employees/employees.component';\r\nimport { EmployeeComponent } from './employees/employee/employee.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { ProductFormComponent } from './product-form/product-form.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CustomerComponent,\r\n    EmployeesComponent,\r\n    EmployeeComponent,\r\n    EmployeeListComponent,\r\n    ProductFormComponent,\r\n    UserComponent\r\n  ],\r\n  imports: [\r\n\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    AngularFireModule.initializeApp(environment.firebaseConfig),\r\n    AngularFireDatabaseModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    ToastrModule.forRoot(),\r\n\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormArray } from '@angular/forms';\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.scss']\n})\nexport class CustomerComponent implements OnInit {\n\n\n  addUser: FormGroup\n  constructor(\n    private fb: FormBuilder\n  ) {\n\n    this.createForm()\n  }\n\n  createForm() {\n    this.addUser = this.fb.group({\n      name: [null],\n      uaddress: this.fb.array([\n        this.fb.group({\n          address: [null],\n          city: [null],\n          pincode: [null],\n          state: [null],\n          country: [null],\n        })\n      ])\n\n    })\n  }\n\n  get userAddress() {\n    return this.addUser.get('uaddress') as FormArray\n  }\n\n  addAddress() {\n    this.userAddress.push(this.fb.group({\n      address: [null],\n      city: [null],\n      pincode: [null],\n      state: [null],\n      country: [null],\n    }))\n  }\n\n  deleteAddress(index) {\n    this.userAddress.removeAt(index)\n  }\n\n  ngOnInit(): void {\n  }\n\n  submit() {\n    console.log(this.addUser.value)\n  }\n}\n","<div class=\"col-md-12 col-12 col-sm-12 border pt-4\" [formGroup]=\"addUser\">\n  <div class=\"col-md-12 col-12 font-weight-bold text-capitalize text-info m-4\">User Registration</div>\n  <div class=\"row\">\n\n\n    <div class=\"col-md-4 form-group\">\n      <label for=\"\">Name</label>\n      <input type=\"text\" formControlName=\"name\" class=\"form-control\">\n    </div>\n    <div class=\"col-md-12 text-capitalize text-center bg-info\">Address</div>\n\n    <div class=\"col-md-12 pt-4 pb-3\"> <button class=\"btn btn-warning\" (click)=\"addAddress()\">Add</button> </div>\n\n    <div class=\"col-md-12\" formArrayName=\"uaddress\">\n      <div class=\"row\" *ngFor=\"let  i of userAddress.controls;let pointIndex=index \" [formGroupName]=\"pointIndex\">\n        <div class=\"col-md-4\">\n\n          <label for=\"\">address</label>\n          <input type=\"text\" formControlName=\"address\" class=\"form-control\">\n        </div>\n        <div class=\"col-md-4\">\n\n          <label for=\"\">city</label>\n          <input type=\"text\" formControlName=\"city\" class=\"form-control\">\n        </div>\n        <div class=\"col-md-4\">\n\n          <label for=\"\">pincode</label>\n          <input type=\"text\" formControlName=\"pincode\" class=\"form-control\">\n        </div>\n        <div class=\"col-md-4\">\n\n          <label for=\"\">state</label>\n          <input type=\"text\" formControlName=\"state\" class=\"form-control\">\n        </div>\n\n        <div class=\"col-md-4\">\n\n          <label for=\"\">Contry</label>\n          <input type=\"text\" formControlName=\"country\" class=\"form-control\">\n        </div>\n        <div class=\"col-md-4 pt-4 pb-3\"> <button class=\"btn btn-danger\"\n            (click)=\"deleteAddress(pointIndex)\">Delete</button>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-md-12 col-12 col-sm-12 text-right\"> <button class=\"btn btn-success\"\n        (click)=\"submit()\">Submit</button></div>\n  </div>\n</div>\n","import { ToastrService } from 'ngx-toastr';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\nimport { EmployeeService } from '../shared/employee.service';\r\nimport { Employee } from '../shared/employee.model';\r\n\r\n@Component({\r\n  selector: 'app-employee-list',\r\n  templateUrl: './employee-list.component.html',\r\n  styleUrls: ['./employee-list.component.scss'],\r\n})\r\nexport class EmployeeListComponent implements OnInit {\r\n  employeeList: Employee[];\r\n  constructor(\r\n    private employeeService: EmployeeService,\r\n    public toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    var x = this.employeeService.getData();\r\n    x.snapshotChanges().subscribe((item) => {\r\n      this.employeeList = [];\r\n      item.forEach((element) => {\r\n        var y = element.payload.toJSON();\r\n        y['$key'] = element.key;\r\n        this.employeeList.push(y as Employee);\r\n      });\r\n    });\r\n  }\r\n\r\n  onEdit(emp: Employee) {\r\n    this.employeeService.selectedEmployee = Object.assign({}, emp);\r\n  }\r\n\r\n  onDelete(key: string) {\r\n    if (confirm('Are you sure to delete this record ?') == true) {\r\n      this.employeeService.deleteEmployee(key);\r\n      this.toastr.success('Success', 'Deleted');\r\n    }\r\n  }\r\n  title = 'toaster-not';\r\n}\r\n","<h6 class=\"text-center\">Employee List</h6>\r\n<br />\r\n<table class=\"table table-bordered table-striped table-sm table-hover\">\r\n  <thead class=\"bg-info text-light text-center\">\r\n    <tr>\r\n      <th>Name</th>\r\n      <th>Email</th>\r\n      <th>Phone Number</th>\r\n      <th>Action</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let employee of employeeList\">\r\n      <td>{{ employee.name }}</td>\r\n      <td>{{ employee.email }}</td>\r\n      <td>{{ employee.phone }}</td>\r\n      <td>\r\n        <span>\r\n          <i\r\n            (click)=\"onEdit(employee)\"\r\n            class=\"fa fa-pencil\"\r\n            aria-hidden=\"true\"\r\n          ></i>\r\n        </span>\r\n        <span class=\"pl-2\">\r\n          <i\r\n            (click)=\"onDelete(employee.$key)\"\r\n            class=\"fa fa-trash-o\"\r\n            aria-hidden=\"true\"\r\n          ></i\r\n        ></span>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { ToastrModule, ToastrService } from 'ngx-toastr';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { EmployeeService } from '../shared/employee.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-employee',\r\n  templateUrl: './employee.component.html',\r\n  styleUrls: ['./employee.component.scss'],\r\n})\r\nexport class EmployeeComponent implements OnInit {\r\n  constructor(\r\n    public employeeService: EmployeeService,\r\n    public toastr: ToastrService,\r\n\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.resetForm();\r\n  }\r\n\r\n  onSubmit(employeeForm: NgForm) {\r\n    if(!employeeForm.valid){\r\n     this.toastr.info(\"Please fill all * fields\" ,\"Required\")\r\n    }\r\n    if (employeeForm.value.$key == null && employeeForm.valid) {\r\n      this.employeeService.insertEmployee(employeeForm.value);\r\n      this.resetForm(employeeForm);\r\n      this.toastr.success('Success', 'Inserted');\r\n    } else {\r\n      this.employeeService.updateEmployee(employeeForm.value);\r\n      this.resetForm(employeeForm);\r\n      this.toastr.success('Success', 'updated');\r\n    }\r\n  }\r\n\r\n  resetForm(employeeForm?: NgForm) {\r\n    if (employeeForm != null) employeeForm.reset();\r\n    this.employeeService.selectedEmployee = {\r\n      $key: null,\r\n      name: '',\r\n  phone:'',\r\n  email:'',\r\n  address:'',\r\n  location:''\r\n    };\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","<div class=\"col-md-12 col-12\">\r\n  <div class=\"row\">\r\n    <form\r\n      class=\"col-md-12 col-12\"\r\n      (ngSubmit)=\"onSubmit(employeeForm)\"\r\n      #employeeForm=\"ngForm\"\r\n    >\r\n      <input\r\n        type=\"hidden\"\r\n        name=\"$key\"\r\n        #$key=\"ngModel\"\r\n        [(ngModel)]=\"employeeService.selectedEmployee.$key\"\r\n      />\r\n      <div class=\"form-group col-md-12 col-12\">\r\n        <label>Name <span style=\"color:red;\">*</span></label>\r\n        <input\r\n          class=\"form-control\"\r\n          name=\"name\"\r\n          #name=\"ngModel\"\r\n          [(ngModel)]=\"employeeService.selectedEmployee.name\"\r\n          placeholder=\"Full Name\"\r\n          required\r\n        />\r\n      </div>\r\n      <div class=\"form-group col-md-12 col-12\">\r\n        <label>Email  <span style=\"color:red;\">*</span></label>\r\n        <input\r\n          class=\"form-control\"\r\n          name=\"email\" required\r\n          #email=\"ngModel\"  pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\r\n          [(ngModel)]=\"employeeService.selectedEmployee.email\"\r\n          placeholder=\"Email\"\r\n        />\r\n      </div>\r\n      <div class=\"form-group col-md-12 col-12\">\r\n        <label>Phone  <span style=\"color:red;\">*</span></label>\r\n        <input type=\"tel\"\r\n          class=\"form-control\"\r\n          name=\"phone\"   pattern=\"[0-9]{3}[0-9]{3}[0-9]{4}\"\r\n          #phone=\"ngModel\"  maxlength=\"12\"\r\n          [(ngModel)]=\"employeeService.selectedEmployee.phone\"\r\n          placeholder=\"Phone\" required\r\n        />\r\n      </div>\r\n      <div class=\"form-group col-md-12 col-12 md-3\">\r\n        <label>Address  </label>\r\n        <div class=\"input-group\">\r\n\r\n          <input\r\n            class=\"form-control\"\r\n            name=\"address\"\r\n            #address=\"ngModel\"\r\n            [(ngModel)]=\"employeeService.selectedEmployee.address\"\r\n            placeholder=\"Address\"\r\n          />\r\n\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group col-md-12 col-12 md-3\">\r\n        <label>Location</label>\r\n        <div class=\"input-group\">\r\n\r\n          <input\r\n            class=\"form-control\"\r\n            name=\"location\"\r\n            #location=\"ngModel\"\r\n            [(ngModel)]=\"employeeService.selectedEmployee.location\"\r\n            placeholder=\"Location\"\r\n          />\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group col-md-12 col-12\">\r\n        <button class=\"btn btn-success\" type=\"submit\">\r\n          Submit\r\n        </button>\r\n        <button\r\n          class=\"btn btn-danger\"\r\n          type=\"button\"\r\n          (click)=\"resetForm(employeeForm)\"\r\n        >\r\n          Reset\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-employees',\n  templateUrl: './employees.component.html',\n  styleUrls: ['./employees.component.scss']\n})\nexport class EmployeesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"text-center\">\n  <h2 class=\"jumbotron bg-dark text-light text-capitalize\">\n    Register Here !!!\n  </h2>\n</div>\n<div class=\"row\">\n  <div class=\"col-md-7\">\n    <app-employee></app-employee>\n  </div>\n  <div class=\"col-md-5\">\n    <app-employee-list></app-employee-list>\n  </div>\n</div>\n","export class Employee {\r\n  $key: string;\r\n  name: string;\r\nphone:any;\r\nemail:any;\r\naddress:string;\r\nlocation:string;\r\n}\r\n","import { Employee } from './employee.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { AngularFireList, AngularFireDatabase } from 'angularfire2/database';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class EmployeeService {\r\n  employeeList: AngularFireList<any>;\r\n  selectedEmployee: Employee = new Employee();\r\n  constructor(private firebase: AngularFireDatabase) {}\r\n\r\n  getData() {\r\n    this.employeeList = this.firebase.list('employee');\r\n    return this.employeeList;\r\n  }\r\n\r\n  insertEmployee(employee: Employee) {\r\n    this.employeeList.push({\r\n      name: employee.name,\r\n      phone: employee.phone,\r\n      address: employee.address,\r\n      email: employee.email,\r\n      location: employee.location,\r\n\r\n    });\r\n  }\r\n\r\n  updateEmployee(employee: Employee) {\r\n    this.employeeList.update(employee.$key, {\r\n      name: employee.name,\r\n      phone: employee.phone,\r\n      address: employee.address,\r\n      email: employee.email,\r\n      location: employee.location,\r\n    });\r\n  }\r\n\r\n  deleteEmployee($key: string) {\r\n    this.employeeList.remove($key);\r\n  }\r\n}\r\n","\nimport { FormBuilder, FormGroup, FormArray, Validators } from '@angular/forms';\nimport { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-product-form',\n  templateUrl: './product-form.component.html',\n  styleUrls: ['./product-form.component.scss']\n})\nexport class ProductFormComponent implements OnInit, AfterViewInit {\n\n  _url = \"https://jsonplaceholder.typicode.com/todos\"\n  data: any[] = [];\n  i: any = 0;\n\n  constructor(\n    private fb: FormBuilder,\n    private http: HttpClient\n  ) { }\n  productForm: FormGroup;\n\n  ngOnInit(): void {\n    this.productForm = this.fb.group({\n      title: [null, Validators.required],\n      selling_points: this.fb.array([this.fb.group({ point: null, value: null })])\n    })\n    this.getData()\n  }\n  ngAfterViewInit() {\n    // this.getData()\n  }\n  get sellingPoints(): any {\n    return this.productForm.get('selling_points') as FormArray;\n  }\n  addSellingPoint() {\n    this.sellingPoints.push(this.fb.group({ point: null, value: null }));\n  }\n\n  deleteSellingPoint(index) {\n    this.sellingPoints.removeAt(index);\n\n  }\n\n  getValidity(i) {\n    return (<FormArray>this.productForm.get('selling_points')).controls[i].invalid;\n  }\n\n  getData() {\n\n    let i = 0;\n\n    this.http.get(this._url).subscribe(res => {\n      console.log(res);\n      if (res) {\n        this.data = res as [];\n        this.data.forEach(r => {\n          this.sellingPoints.controls.forEach(element => {\n            element.value.point = r.title\n            //this.addSellingPoint();\n          });\n\n        });\n\n      }\n    })\n  }\n\n}\n","<p>dynamic increase form array in angular </p>\n\n\n<h1>Edit Product</h1>\n\n<form [formGroup]=\"productForm\">\n\n  <label>\n    Title: <input formControlName=\"title\" />\n  </label>\n  <small style=\"color: red;\"\n    *ngIf=\"productForm.get('title').invalid && (productForm.get('title').dirty || productForm.get('title').touched)\">\n    This field required </small>\n  <h2>Selling Points</h2>\n\n  <div formArrayName=\"selling_points\">\n    <div *ngFor=\"let item  of sellingPoints.controls;let pointIndex=index\" [formGroupName]=\"pointIndex\">\n      <label>\n        Selling Point: <input formControlName=\"point\" />\n      </label> <label>\n        Value: <input formControlName=\"value\" />\n      </label>\n\n      <!-- Invalid={{ getValidity(pointIndex) }} -->\n      <button type=\"button\" (click)=\"deleteSellingPoint(pointIndex)\">Delete Selling Point</button>\n    </div>\n    <button type=\"button\" (click)=\"addSellingPoint()\">Add Selling Point</button>\n  </div>\n</form>\n\n\n{{ this.productForm.value | json }}\n","import { FormBuilder, FormGroup, FormArray } from '@angular/forms';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n\n  form: FormGroup\n  constructor(\n    private fb: FormBuilder\n  ) {\n    this.form = this.fb.group({\n      persons: this.fb.array([this.fb.group({ name: null })])\n    })\n\n\n  }\n  get person() {\n    return this.form.get('persons') as FormArray\n  }\n  ngOnInit() {\n\n  }\n\n  add() {\n    this.person.push(this.fb.group({ name: null }))\n  }\n  submit() {\n    console.log(this.form.value)\n  }\n}\n","<div [formGroup]=\"form\">\n  <div formArrayName=\"persons\">\n    <div *ngFor=\"let r of person.controls;let pIndex=index\">\n      <label>Name</label>\n      <input type=\"text\" formControlName=\"name\">\n    </div>\n  </div>\n</div>\n\n<button (click)=\"add()\">Add</button>\n<button (click)=\"submit()\">submit</button>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseConfig: {\n    apiKey: 'AIzaSyCejRfiFGBMxlH4_TeQhPL-3GKQ0Xn_uXw',\n    authDomain: 'angularcrud-a4d14.firebaseapp.com',\n    databaseURL: 'https://angularcrud-a4d14.firebaseio.com',\n    projectId: 'angularcrud-a4d14',\n    //storage:'gs://angularcrud-a4d14.appspot.com',\n    storageBucket: 'angularcrud-a4d14.appspot.com',\n    messagingSenderId: '193058305006',\n    appId: '1:193058305006:web:05a36ef8d7510a85ee54ff',\n    measurementId: 'G-ZK2RVZJYSJ',\n  },\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}